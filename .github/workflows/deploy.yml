name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual deployment

permissions:
  contents: read
  pages: write
  id-token: write
  issues: write  # For creating issues on failure

# Ensure deploy doesn't conflict with data collection
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Type checking
        run: npx tsc --noEmit
        
      - name: Notify on test failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const body = `üö® **Test Failed** - ${context.workflow}
            
            **Branch:** ${context.ref}
            **Commit:** ${context.sha}
            **Actor:** ${context.actor}
            **Run:** ${context.runNumber}
            
            [View Details](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Test Failure: ${context.workflow} #${context.runNumber}`,
              body: body,
              labels: ['bug', 'ci-failure']
            });

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'
          
      - name: Notify on build failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const body = `üö® **Build Failed** - ${context.workflow}
            
            **Branch:** ${context.ref}
            **Commit:** ${context.sha}
            **Actor:** ${context.actor}
            **Run:** ${context.runNumber}
            
            This is a CRITICAL failure that prevents deployment.
            
            [View Details](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® CRITICAL: Build Failure #${context.runNumber}`,
              body: body,
              labels: ['bug', 'critical', 'ci-failure']
            });

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Notify on deployment failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const body = `üö® **Deployment Failed** - ${context.workflow}
            
            **Branch:** ${context.ref}
            **Commit:** ${context.sha}
            **Actor:** ${context.actor}
            **Run:** ${context.runNumber}
            
            Build succeeded but deployment to GitHub Pages failed.
            This may be a temporary issue with GitHub Pages.
            
            [View Details](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Deployment Failure #${context.runNumber}`,
              body: body,
              labels: ['bug', 'deployment', 'ci-failure']
            });
            
      - name: Notify on successful deployment
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            console.log('‚úÖ Deployment successful to GitHub Pages');
            
  post-deploy-health-check:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
      - name: Wait for deployment to propagate
        run: sleep 45
        
      - name: Health check deployed site
        env:
          SITE_URL: https://reg-kris.github.io/Investor-Sentiment-Tracker-v2/
        run: |
          echo "Checking health of: $SITE_URL"
          
          # Retry mechanism for reliability
          MAX_RETRIES=5
          RETRY_COUNT=0
          SUCCESS=false
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ "$SUCCESS" = "false" ]; do
            RETRY_COUNT=$((RETRY_COUNT + 1))
            echo "Attempt $RETRY_COUNT of $MAX_RETRIES..."
            
            # Check if site is responding with detailed output
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 10 --max-time 30 "$SITE_URL" || echo "000")
            
            echo "HTTP Response Code: $RESPONSE"
            
            if [ "$RESPONSE" = "200" ]; then
              echo "‚úÖ Health check passed - Site is responding"
              SUCCESS=true
            else
              echo "‚ö†Ô∏è  Attempt $RETRY_COUNT failed - HTTP $RESPONSE"
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "Waiting 15 seconds before retry..."
                sleep 15
              fi
            fi
          done
          
          if [ "$SUCCESS" = "false" ]; then
            echo "‚ùå Health check failed after $MAX_RETRIES attempts"
            echo "Final response code: $RESPONSE"
            
            # Additional debugging information
            echo "--- DNS Resolution Check ---"
            nslookup reg-kris.github.io || echo "DNS lookup failed"
            
            echo "--- Curl verbose output ---"
            curl -v --connect-timeout 10 --max-time 30 "$SITE_URL" || true
            
            exit 1
          fi
          
      - name: Notify on health check failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const body = `üö® **Post-Deployment Health Check Failed**
            
            **Branch:** ${context.ref}
            **Commit:** ${context.sha}
            **Run:** ${context.runNumber}
            
            Deployment succeeded but the site is not responding correctly.
            This indicates a potential issue with the deployed application.
            
            [View Details](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Health Check Failure #${context.runNumber}`,
              body: body,
              labels: ['bug', 'health-check', 'post-deploy']
            });