name: Workflow Coordinator

on:
  schedule:
    # Run every hour to check for pending workflows
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_data_collection:
        description: 'Force data collection workflow'
        required: false
        default: 'false'
        type: boolean
      force_deployment:
        description: 'Force deployment workflow'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: read
  actions: write
  issues: write

# Prevent multiple coordinator instances
concurrency:
  group: workflow-coordinator
  cancel-in-progress: true

jobs:
  coordinate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check running workflows
        id: check-workflows
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Get all running workflows
            const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              status: 'in_progress',
              per_page: 100
            });
            
            const dataCollectionRunning = runs.workflow_runs.some(run => 
              run.name === 'Data Collection and Analysis' && run.status === 'in_progress'
            );
            
            const deployRunning = runs.workflow_runs.some(run => 
              run.name === 'Deploy Next.js to GitHub Pages' && run.status === 'in_progress'
            );
            
            console.log(`Data collection running: ${dataCollectionRunning}`);
            console.log(`Deploy running: ${deployRunning}`);
            
            core.setOutput('data-collection-running', dataCollectionRunning);
            core.setOutput('deploy-running', deployRunning);
            core.setOutput('safe-to-trigger', !dataCollectionRunning && !deployRunning);

      - name: Check if data collection is needed
        id: check-data-need
        if: steps.check-workflows.outputs.safe-to-trigger == 'true'
        run: |
          # Check if data is older than 4 hours
          if [ -f "data/latest.json" ]; then
            last_update=$(stat -c %Y data/latest.json 2>/dev/null || stat -f %m data/latest.json 2>/dev/null || echo 0)
            current_time=$(date +%s)
            time_diff=$((current_time - last_update))
            hours_diff=$((time_diff / 3600))
            
            echo "Data is $hours_diff hours old"
            
            if [ $hours_diff -gt 4 ] || [ "${{ github.event.inputs.force_data_collection }}" == "true" ]; then
              echo "Data collection needed"
              echo "need-data-collection=true" >> $GITHUB_OUTPUT
            else
              echo "Data is recent enough"
              echo "need-data-collection=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No data file found, collection needed"
            echo "need-data-collection=true" >> $GITHUB_OUTPUT
          fi

      - name: Trigger data collection
        if: steps.check-data-need.outputs.need-data-collection == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            console.log('Triggering data collection workflow...');
            
            const response = await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'data-collection.yml',
              ref: 'main',
              inputs: {
                force_analysis: 'false'
              }
            });
            
            console.log('Data collection workflow triggered successfully');

      - name: Wait for data collection completion
        if: steps.check-data-need.outputs.need-data-collection == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Wait up to 20 minutes for data collection to complete
            const maxWaitMinutes = 20;
            const pollIntervalSeconds = 30;
            const maxPolls = (maxWaitMinutes * 60) / pollIntervalSeconds;
            
            console.log(`Waiting for data collection completion (max ${maxWaitMinutes} minutes)...`);
            
            for (let poll = 0; poll < maxPolls; poll++) {
              const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
                owner,
                repo,
                workflow_id: 'data-collection.yml',
                per_page: 5
              });
              
              const latestRun = runs.workflow_runs[0];
              
              if (latestRun && latestRun.status === 'completed') {
                console.log(`Data collection completed with status: ${latestRun.conclusion}`);
                core.setOutput('data-collection-success', latestRun.conclusion === 'success');
                break;
              }
              
              if (poll < maxPolls - 1) {
                console.log(`Poll ${poll + 1}/${maxPolls}: Still running, waiting ${pollIntervalSeconds}s...`);
                await new Promise(resolve => setTimeout(resolve, pollIntervalSeconds * 1000));
              } else {
                console.log('Timeout waiting for data collection to complete');
                core.setOutput('data-collection-success', false);
              }
            }

      - name: Check if deployment is needed
        id: check-deploy-need
        if: always() && steps.check-workflows.outputs.safe-to-trigger == 'true'
        run: |
          # Check if there are new commits since last deployment
          # or if forced deployment is requested
          if [ "${{ github.event.inputs.force_deployment }}" == "true" ]; then
            echo "Forced deployment requested"
            echo "need-deployment=true" >> $GITHUB_OUTPUT
          else
            # Check for recent commits that might need deployment
            recent_commits=$(git log --since="4 hours ago" --oneline | wc -l)
            if [ $recent_commits -gt 0 ]; then
              echo "Recent commits found, deployment needed"
              echo "need-deployment=true" >> $GITHUB_OUTPUT
            else
              echo "No recent commits, deployment not needed"
              echo "need-deployment=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Trigger deployment
        if: steps.check-deploy-need.outputs.need-deployment == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            console.log('Triggering deployment workflow...');
            
            const response = await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'deploy.yml',
              ref: 'main'
            });
            
            console.log('Deployment workflow triggered successfully');

      - name: Create status report
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            const safeToTrigger = '${{ steps.check-workflows.outputs.safe-to-trigger }}';
            const dataCollectionNeeded = '${{ steps.check-data-need.outputs.need-data-collection }}';
            const deploymentNeeded = '${{ steps.check-deploy-need.outputs.need-deployment }}';
            
            const reportTitle = `Workflow Coordination Report - ${new Date().toISOString()}`;
            const reportBody = `
            ## Workflow Status Report
            
            **Timestamp:** ${new Date().toISOString()}
            **Coordinator Run:** ${context.runId}
            
            ### Current Status
            - **Safe to trigger workflows:** ${safeToTrigger === 'true' ? '‚úÖ Yes' : '‚ùå No (workflows running)'}
            - **Data collection needed:** ${dataCollectionNeeded === 'true' ? '‚úÖ Yes' : '‚è≠Ô∏è No'}
            - **Deployment needed:** ${deploymentNeeded === 'true' ? '‚úÖ Yes' : '‚è≠Ô∏è No'}
            
            ### Actions Taken
            ${dataCollectionNeeded === 'true' ? '- üîÑ Triggered data collection workflow' : '- ‚è≠Ô∏è Skipped data collection (not needed)'}
            ${deploymentNeeded === 'true' ? '- üöÄ Triggered deployment workflow' : '- ‚è≠Ô∏è Skipped deployment (not needed)'}
            
            ### Next Coordination
            The coordinator will run again in 1 hour to check for pending workflows.
            
            ---
            *This report was automatically generated by the workflow coordinator.*
            `;
            
            console.log(reportBody);

  error-recovery:
    runs-on: ubuntu-latest
    if: failure()
    needs: coordinate
    
    steps:
      - name: Handle coordination failure
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Workflow Coordination Failed';
            const body = `
            ## Coordination Failure Report
            
            **Timestamp:** ${new Date().toISOString()}
            **Run ID:** ${context.runId}
            
            The workflow coordinator failed to manage workflow dependencies properly.
            This could lead to conflicts between data collection and deployment workflows.
            
            **Immediate Actions Required:**
            1. Check for any stuck workflows
            2. Manually verify data collection is working
            3. Ensure deployments are not conflicting
            4. Review coordinator logs: https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
            
            **Recovery Steps:**
            1. Cancel any stuck workflows
            2. Run workflows manually if needed
            3. Monitor for the next automatic coordination cycle
            
            This issue was automatically created by the workflow coordinator.
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'critical', 'workflow-coordination', 'automated']
            });