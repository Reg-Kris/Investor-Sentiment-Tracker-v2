name: Notification System

on:
  workflow_call:
    inputs:
      notification_type:
        required: true
        type: string
        description: 'Type of notification (success, failure, warning)'
      title:
        required: true
        type: string
        description: 'Notification title'
      message:
        required: true
        type: string
        description: 'Notification message'
      workflow_name:
        required: false
        type: string
        description: 'Name of the triggering workflow'
    secrets:
      SLACK_WEBHOOK_URL:
        required: false
        description: 'Slack webhook URL for notifications'
      SMTP_SERVER:
        required: false
        description: 'SMTP server for email notifications'
      SMTP_USERNAME:
        required: false
        description: 'SMTP username'
      SMTP_PASSWORD:
        required: false
        description: 'SMTP password'
      EMAIL_TO:
        required: false
        description: 'Email recipients'

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    if: ${{ secrets.SLACK_WEBHOOK_URL != '' }}
    
    steps:
      - name: Send Slack notification
        uses: actions/github-script@v7
        with:
          script: |
            const axios = require('axios');
            
            const notificationType = '${{ inputs.notification_type }}';
            const title = '${{ inputs.title }}';
            const message = '${{ inputs.message }}';
            const workflowName = '${{ inputs.workflow_name }}' || 'Unknown Workflow';
            
            // Choose color and emoji based on notification type
            let color = '#36a64f'; // green
            let emoji = '‚úÖ';
            
            if (notificationType === 'failure') {
              color = '#ff0000'; // red
              emoji = '‚ùå';
            } else if (notificationType === 'warning') {
              color = '#ffaa00'; // orange
              emoji = '‚ö†Ô∏è';
            }
            
            const payload = {
              attachments: [{
                color: color,
                blocks: [
                  {
                    type: 'header',
                    text: {
                      type: 'plain_text',
                      text: `${emoji} ${title}`
                    }
                  },
                  {
                    type: 'section',
                    fields: [
                      {
                        type: 'mrkdwn',
                        text: `*Repository:*\n${context.repo.owner}/${context.repo.repo}`
                      },
                      {
                        type: 'mrkdwn',
                        text: `*Workflow:*\n${workflowName}`
                      },
                      {
                        type: 'mrkdwn',
                        text: `*Branch:*\n${context.ref}`
                      },
                      {
                        type: 'mrkdwn',
                        text: `*Actor:*\n${context.actor}`
                      }
                    ]
                  },
                  {
                    type: 'section',
                    text: {
                      type: 'mrkdwn',
                      text: `*Message:*\n${message}`
                    }
                  },
                  {
                    type: 'actions',
                    elements: [
                      {
                        type: 'button',
                        text: {
                          type: 'plain_text',
                          text: 'View Workflow Run'
                        },
                        url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
                      },
                      {
                        type: 'button',
                        text: {
                          type: 'plain_text',
                          text: 'View Repository'
                        },
                        url: `https://github.com/${context.repo.owner}/${context.repo.repo}`
                      }
                    ]
                  }
                ]
              }]
            };
            
            try {
              const response = await axios.post('${{ secrets.SLACK_WEBHOOK_URL }}', payload);
              console.log('Slack notification sent successfully');
            } catch (error) {
              console.error('Failed to send Slack notification:', error.message);
              core.setFailed('Slack notification failed');
            }

  notify-email:
    runs-on: ubuntu-latest
    if: ${{ secrets.EMAIL_TO != '' && secrets.SMTP_SERVER != '' }}
    
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: '${{ inputs.notification_type == ''failure'' && ''üö®'' || inputs.notification_type == ''warning'' && ''‚ö†Ô∏è'' || ''‚úÖ'' }} ${{ inputs.title }}'
          to: ${{ secrets.EMAIL_TO }}
          from: 'GitHub Actions <${{ secrets.SMTP_USERNAME }}>'
          html_body: |
            <html>
            <head>
              <style>
                body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f6f8fa; }
                .container { max-width: 600px; margin: 0 auto; background-color: white; border-radius: 8px; padding: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                .header { background-color: ${{ inputs.notification_type == 'failure' && '#ff4444' || inputs.notification_type == 'warning' && '#ffaa00' || '#28a745' }}; color: white; padding: 15px; border-radius: 8px 8px 0 0; margin: -20px -20px 20px -20px; }
                .info-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin: 20px 0; }
                .info-item { background-color: #f8f9fa; padding: 10px; border-radius: 4px; }
                .info-label { font-weight: bold; color: #586069; font-size: 12px; text-transform: uppercase; }
                .info-value { color: #24292e; margin-top: 5px; }
                .message { background-color: #f6f8fa; padding: 15px; border-radius: 4px; border-left: 4px solid ${{ inputs.notification_type == 'failure' && '#ff4444' || inputs.notification_type == 'warning' && '#ffaa00' || '#28a745' }}; margin: 20px 0; }
                .actions { margin-top: 20px; }
                .button { display: inline-block; padding: 10px 20px; background-color: #0366d6; color: white; text-decoration: none; border-radius: 4px; margin-right: 10px; }
                .footer { margin-top: 30px; padding-top: 20px; border-top: 1px solid #e1e4e8; font-size: 12px; color: #586069; }
              </style>
            </head>
            <body>
              <div class="container">
                <div class="header">
                  <h2>${{ inputs.notification_type == 'failure' && '‚ùå' || inputs.notification_type == 'warning' && '‚ö†Ô∏è' || '‚úÖ' }} ${{ inputs.title }}</h2>
                </div>
                
                <div class="info-grid">
                  <div class="info-item">
                    <div class="info-label">Repository</div>
                    <div class="info-value">${{ github.repository }}</div>
                  </div>
                  <div class="info-item">
                    <div class="info-label">Workflow</div>
                    <div class="info-value">${{ inputs.workflow_name || 'Unknown' }}</div>
                  </div>
                  <div class="info-item">
                    <div class="info-label">Branch</div>
                    <div class="info-value">${{ github.ref_name }}</div>
                  </div>
                  <div class="info-item">
                    <div class="info-label">Triggered by</div>
                    <div class="info-value">${{ github.actor }}</div>
                  </div>
                </div>
                
                <div class="message">
                  <strong>Details:</strong><br>
                  ${{ inputs.message }}
                </div>
                
                <div class="actions">
                  <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="button">View Workflow Run</a>
                  <a href="https://github.com/${{ github.repository }}" class="button">View Repository</a>
                </div>
                
                <div class="footer">
                  <p>This email was automatically sent by GitHub Actions.</p>
                  <p>Time: ${{ github.event.head_commit.timestamp || 'Unknown' }}</p>
                  <p>Run ID: ${{ github.run_id }}</p>
                </div>
              </div>
            </body>
            </html>

  create-github-issue:
    runs-on: ubuntu-latest
    if: ${{ inputs.notification_type == 'failure' }}
    
    steps:
      - name: Create GitHub issue for failures
        uses: actions/github-script@v7
        with:
          script: |
            const title = '${{ inputs.title }}';
            const message = '${{ inputs.message }}';
            const workflowName = '${{ inputs.workflow_name }}' || 'Unknown Workflow';
            
            // Check if similar issue already exists
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'automated,workflow-failure'
            });
            
            const similarIssue = existingIssues.data.find(issue => 
              issue.title.includes(workflowName) && 
              issue.created_at > new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()
            );
            
            if (similarIssue) {
              console.log(`Similar issue already exists: #${similarIssue.number}`);
              
              // Add a comment to the existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: similarIssue.number,
                body: `üîÑ **Additional Failure Occurrence**
                
                **Time:** ${new Date().toISOString()}
                **Run ID:** ${context.runId}
                **Message:** ${message}
                
                [View this run](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
              });
            } else {
              // Create a new issue
              const body = `
              ## Workflow Failure Report
              
              **Workflow:** ${workflowName}
              **Time:** ${new Date().toISOString()}
              **Branch:** ${context.ref}
              **Triggered by:** ${context.actor}
              **Run ID:** ${context.runId}
              
              ### Details
              ${message}
              
              ### Investigation Steps
              - [ ] Check workflow logs
              - [ ] Verify dependencies and configuration
              - [ ] Test locally if applicable
              - [ ] Check for service outages
              
              ### Links
              - [Workflow Run](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              - [Repository](https://github.com/${context.repo.owner}/${context.repo.repo})
              
              ---
              *This issue was automatically created by the notification system.*
              `;
              
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `üö® ${title}`,
                body: body,
                labels: ['bug', 'automated', 'workflow-failure', 'high-priority']
              });
              
              console.log(`Created issue #${issue.data.number}`);
            }

  log-notification:
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Log notification details
        run: |
          echo "=== Notification Details ==="
          echo "Type: ${{ inputs.notification_type }}"
          echo "Title: ${{ inputs.title }}"
          echo "Message: ${{ inputs.message }}"
          echo "Workflow: ${{ inputs.workflow_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "=========================="